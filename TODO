* TODO Implement missing calls
** TODO link
** TODO mkdir
** TODO removexattr
** TODO rename
** TODO rmdir
** TODO setxattr
** TODO statfs
** TODO symlink
** TODO unlink
** TODO setlk
** TODO getlk
* TODO Finish incomplete implementations of these calls:
** TODO readlink
** TODO access
** TODO flush
** TODO forget
** TODO fsync/fsyncdir
** TODO getxattr
** TODO listxattr
** TODO mknod
** TODO create
** TODO releasedir
* TODO For a short period of time after startup, some of root directories do not belong to uid/gid, but to root/root (means 0)
* TODO Consider counting st_nlinks for directories properly
* DONE . and .. should get proper uid/gid (now they are just 0/0), as well as permissions, actually
* DONE Add readable(Path, owner|group|other, State), writable(Path, ..., ...) and executable(Path, ..., ...) callbacks
* TODO When mounted using some user account, but then mount point is listed under root, it is a complete mess:
** d?????????  ? ?      ?           ?                ? amqpfs    <--- instead of --->
** drwxrwxrwx  1 root   root  0 1969-12-31 16:00 amqpfs
* TODO Consider passing Fi for write and read
* DONE Now sure what to do with timezones, currently 0 will not correspond to 1970/1/1 00:00 (unless you're in London or anywhere else with GMT+0). Observed this in PST
** In fact, that was alright, UTC 1970/1/1 happens 1969/12/31 4PM PST.
* DONE Decide whether providers should have any special access to uid/gid of attrs (i.e. uid/gid callbacks)
** DONE Actually we can pass uid/gid from ctx as a header and then store it in ReqState and default uid() and guid() callbacks will return it... so by default it will always belong to current user, but still configurable
* DONE Do something about not seeing (some?) of error messages generated by providers (on console)
* TODO Implement set_atime/3 and set_mtime/3 callbacks
* DONE Consider moving amqpfs_server:setattr_stat code to amqpfs_provider_base so it will be easier to detect what was actually set
* TODO Make spawning in amqpfs providers optional (either using some nice option or by just forcing amqpfs providers to spawn processes themselves) :maybe:
* TODO Review how remote_XXX() API in amqpfs_server can be simplified (it is a little bit messy as of now)
* DONE Add caching
** DONE Add ttl() callback
